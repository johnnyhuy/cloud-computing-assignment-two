trigger:
- master

pr: none

variables:
- group: stayapp-variable-group
- name: AWS_SERVICE_CONNECTION
  value: aws-service-connection
- name: KUBERNETES_SERVICE_CONNECTION
  value: gcp-gke-service-connection

stages:
- stage: build
  displayName: Build
  jobs:
  - job: publish_artifacts
    displayName: Publish artifacts
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: CopyFiles@2
      displayName: Copy deployment files
      inputs:
        contents: |
          $(System.DefaultWorkingDirectory)/.env.production
          $(System.DefaultWorkingDirectory)/kubernetes/**
          $(System.DefaultWorkingDirectory)/sql/**
        targetFolder: $(Build.ArtifactStagingDirectory)
    - publish: $(Build.ArtifactStagingDirectory)
      artifact: deployment

  - job: build_stayapp
    displayName: Build Stay application
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DockerCompose@0
      displayName: 'Build Docker images'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: 'docker-compose.prod.yml'
        action: 'Build services'

    - task: ECRPushImage@1
      displayName: 'Push StayApp to ECR'
      env:
        STAYAPP_TAG: '$(Build.BuildId)'
      inputs:
        awsCredentials: '$(AWS_SERVICE_CONNECTION)'
        regionName: 'ap-southeast-2'
        imageSource: 'imagename'
        sourceImageName: 'stayapp'
        repositoryName: 'stayapp'

- stage: production
  displayName: Production
  jobs:
  - deployment: deploy_stayapp_database
    displayName: SQL database
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Stay Application'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: deployment

          - task: Bash@3
            displayName: Seed SQL database
            inputs:
              targetType: 'inline'
              script: |
                tar -xvf $(Agent.BuildDirectory)/deployment/sql/000_create_database.tar.gz -C $(Agent.BuildDirectory)/deployment/sql
                tar -xvf $(Agent.BuildDirectory)/deployment/sql/001_dump.tar.gz -C $(Agent.BuildDirectory)/deployment/sql
                chmod +x $(Agent.BuildDirectory)/deployment/sql/seed.sh
                $(Agent.BuildDirectory)/deployment/sql/seed.sh -d stayapp -u $(STAYAPP_DATABASE_USER) -h $(STAYAPP_DATABASE_HOST) -p ''$(STAYAPP_DATABASE_PASSWORD)''

  - deployment: deploy_stayapp
    displayName: Kubernetes
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Stay Application'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: deployment

          - task: AWSShellScript@1
            displayName: 'Get ECR password'
            inputs:
              awsCredentials: 'aws-service-connection'
              regionName: 'ap-southeast-2'
              scriptType: 'inline'
              inlineScript: |
                password=`aws ecr --region=ap-southeast-2 get-login --output text --query authorizationData | cut -d ' ' -f6`
                echo "##vso[task.setvariable variable=ECR_PASSWORD]$password"
              failOnStandardError: true

          - task: Kubernetes@1
            displayName: 'Remove ECR Secret'
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'gcp-gke-service-connection'
              namespace: 'default'
              command: 'delete'
              arguments: 'secret --ignore-not-found ecr-credentials'
              secretType: 'generic'

          - task: Kubernetes@1
            displayName: 'Set ECR Secret'
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'gcp-gke-service-connection'
              namespace: 'default'
              command: 'create'
              arguments: 'secret docker-registry ecr-credentials --docker-server https://961143247577.dkr.ecr.ap-southeast-2.amazonaws.com --docker-username AWS --docker-password $(ECR_PASSWORD)'
              secretType: 'generic'

          - task: replacetokens@3
            displayName: 'Replace production env file'
            inputs:
              rootDirectory: '$(Agent.BuildDirectory)'
              targetFiles: |
                **/*.env*
                **/*.yml
              encoding: 'auto'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              tokenPrefix: '$('
              tokenSuffix: ')'

          - task: Kubernetes@1
            displayName: 'Delete Stay app secrets'
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'gcp-gke-service-connection'
              namespace: 'default'
              command: 'delete'
              arguments: 'secret --ignore-not-found stayapp-secrets'
              secretType: 'generic'

          - task: Kubernetes@1
            displayName: 'Apply Stay app secrets'
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'gcp-gke-service-connection'
              namespace: 'default'
              command: 'create'
              arguments: 'secret generic stayapp-secrets --from-env-file $(Agent.BuildDirectory)/deployment/.env.production'
              secretType: 'generic'

          - task: Kubernetes@1
            displayName: 'Apply deployment'
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: '$(KUBERNETES_SERVICE_CONNECTION)'
              command: 'apply'
              useConfigurationFile: true
              configuration: '$(Agent.BuildDirectory)/deployment/kubernetes'
              arguments: '-R'
              secretType: 'generic'
